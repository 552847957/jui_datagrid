/*! \mainpage Welcome

\section intro_sec Introduction

jui_datagrid is a helper class for <a href="../../../../docs/">jquery.jui_datagrid</a> plugin, handles server operations (mainly through AJAX requests).

<strong>NOTE</strong>: It is just a helper class. Anyone could write custom php code to return JSON results to jquery.jui_datagrid plugin.

Required: php 5+

<strong>Limitations</strong>:

GROUP BY and HAVING are not supported (at this time), neither from jui_datagrid class nor from jquery.jui_datagrid plugin.

Supported RDMBS: "ADODB", "POSTGRES".\n
ADODB drivers tested: mysql, mysqlt, mysqli, pdo_mysql, postgres.

\section conf_sec Database settings
\code{.php}
<?php
$dbcon_settings = array(
	'rdbms' => 'ADODB', // one of "ADODB", "MYSQL", "MYSQLi", "MYSQL_PDO", "POSTGRES" (at this time only "ADODB" and "POSTGRES" are implemented)
	'use_prepared_statements' => true,
	'php_adodb_driver' => 'pdo_mysql', // ADODB drivers tested: mysql, mysqlt, mysqli, pdo_mysql, postgres
	'php_adodb_dsn_options_persist' => '0', // do not change if you are not sure
	'php_adodb_dsn_options_misc' => '', // do not set fetchmode here, it is set to ADODB_FETCH_ASSOC
	'php_adodb_dsn_custom' => '',
	'db_server' => 'MYSQL_SERVERNAME_OR_IP',
	'db_name' => 'DBNAME',
	'db_user' => 'MYSQL_USER',
	'db_passwd' => 'MYSQL_PASSWORD',
	'db_port' => '',
	'query_after_connection' => '' // e.g. 'SET NAMES UTF8'
);
?>
\endcode

\section usage_sec Usage

\subsection usage1 Fetch page data from server
\code{.php}
$jdg = new jui_datagrid($debug_mode);
$conn = $jdg->db_connect($dbcon_settings);
if($conn === false) {
	$last_error = $jdg->get_last_error();
} else {
	$where = $jdg->get_whereSQL($conn, $filter_rules);

    if(array_key_exists('error_message', $where)) {
        $last_filter_error = $where;
    } else {
        $whereSQL = $where['sql'];
        $bind_params = $where['bind_params'];

        $selectCountSQL = 'SELECT count(id) as totalrows FROM customers';
        $total_rows = $jdg->get_total_rows($conn, $selectCountSQL, $whereSQL, $bind_params);

        if($total_rows === false) {
            $last_error = $jdg->get_last_error();
        } else {
            $selectSQL = 'SELECT c.id as customer_id, c.lastname, c.firstname, c.email, g.gender ' .
                'FROM customers c INNER JOIN lk_genders g ON (c.lk_genders_id = g.id)';
            $a_data = $jdg->fetch_page_data($conn, $page_num, $rows_per_page, $selectSQL, $sorting, $whereSQL, $bind_params);
            if($a_data === false) {
                $last_error = $jdg->get_last_error();
            }
        }
    }
	$jdg->db_disconnect($conn);
}
\endcode


\subsection usage2 Count total rows
\code{.php}
$jdg = new jui_datagrid($debug_mode);
$conn = $jdg->db_connect($dbcon_settings);
if($conn === false) {
	$last_error = $jdg->get_last_error();
} else {
	$where = $jdg->get_whereSQL($conn, $filter_rules);
    if(array_key_exists('error_message', $where)) {
        $last_filter_error = $where;
    } else {
        $whereSQL = $where['sql'];
        $bind_params = $where['bind_params'];

        $selectCountSQL = 'SELECT count(id) as totalrows FROM customers';
        $total_rows = $jdg->get_total_rows($conn, $selectCountSQL, $whereSQL, $bind_params);

        if($total_rows === false) {
            $last_error = $jdg->get_last_error();
        }
    }
	$jdg->db_disconnect($conn);
}
\endcode

 */